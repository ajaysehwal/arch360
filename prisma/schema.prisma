// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @unique // Clerk user ID (sub)
  email          String          @unique
  name           String?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  subscriptions  Subscription[]
  projects       Project[]
}

model Project {
  id            String     @id @default(cuid())
  name          String
  description   String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  ownerId       String
  floorMapUrl   String
  topViewUrl    String?

  owner         User       @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  hotspots      Hotspot[]
}

model Hotspot {
  id        String  @id @default(cuid())
  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  x         Int
  y         Int
  url       String
  label     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([projectId])
}

model Subscription {
  id                  String                @id @default(cuid())
  userId              String
  plan               Plan                  @default(BASIC)
  status             SubscriptionStatus     @default(ACTIVE)
  createdAt          DateTime               @default(now())
  updatedAt          DateTime               @updatedAt
  autoRenew          Boolean                @default(true)
  interval           SubscriptionInterval   @default(MONTHLY)
  startDate          DateTime               @default(now())
  endDate            DateTime?
  nextBillingDate    DateTime?
  billingCycleStart  DateTime?
  billingCycleEnd    DateTime?
  paymentMethodId    String?
  metadata           Json?

  user               User                   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

enum SubscriptionInterval {
  MONTHLY
  YEARLY
  LIFETIME
}

enum Plan {
  BASIC
  PRO
  ENTERPRISE
}

enum SubscriptionStatus {
  ACTIVE
  CANCELED
  EXPIRED
  TRIALING
  PAST_DUE
}
